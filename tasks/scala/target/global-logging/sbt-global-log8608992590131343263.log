[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vlads\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vlads\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 11.0.1)
[debug]       Load.loadUnit: plugins took 186.7813ms
[debug]       Load.loadUnit: defsScala took 0.5195ms
[debug] [Loading] Scanning directory C:\Users\vlads\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vlads\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 37.0375 ms
[debug]           Load.resolveProject(global-plugins) took 73.1085ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\vlads\.sbt\1.0\plugins, plugins: List(<none>))) took 152.0597ms
[debug] [Loading] Done in C:\Users\vlads\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 183.7677ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4986ms
[debug]     Load.loadUnit(file:/C:/Users/vlads/.sbt/1.0/plugins/, ...) took 386.7045ms
[debug]   Load.apply: load took 759.496ms
[debug]   Load.apply: resolveProjects took 9.9308ms
[debug]   Load.apply: finalTransforms took 114.7136ms
[debug]   Load.apply: config.delegates took 13.8477ms
[debug]   Load.apply: Def.make(settings)... took 1756.9094ms
[debug]   Load.apply: structureIndex took 241.9899ms
[debug]   Load.apply: mkStreams took 2.8157ms
[info] loading global plugins from C:\Users\vlads\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 22090.2628ms
[debug]           Load.loadUnit: plugins took 41.6165ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\vlads\Desktop\MyScalaProgram\Hey\project
[debug]             Load.loadUnit: mkEval took 27.075ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vlads\Desktop\MyScalaProgram\Hey\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7197 ms
[info] loading settings for project hey-build from idea.sbt ...
[debug]               Load.resolveProject(hey-build) took 19.6145ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hey-build, base: C:\Users\vlads\Desktop\MyScalaProgram\Hey\project, plugins: List(<none>))) took 23.344ms
[debug] [Loading] Done in C:\Users\vlads\Desktop\MyScalaProgram\Hey\project, returning: (hey-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4959.5783ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.3814ms
[debug]         Load.loadUnit(file:/C:/Users/vlads/Desktop/MyScalaProgram/Hey/project/, ...) took 5012.1236ms
[debug]       Load.apply: load took 5016.2187ms
[debug]       Load.apply: resolveProjects took 0.2042ms
[debug]       Load.apply: finalTransforms took 21.6549ms
[debug]       Load.apply: config.delegates took 0.5827ms
[debug]       Load.apply: Def.make(settings)... took 151.2366ms
[debug]       Load.apply: structureIndex took 59.6308ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from C:\Users\vlads\Desktop\MyScalaProgram\Hey\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7466.5043ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\vlads\Desktop\MyScalaProgram\Hey
[debug]       Load.loadUnit: mkEval took 0.6237ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vlads\Desktop\MyScalaProgram\Hey, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.9278 ms
[info] loading settings for project hey from build.sbt ...
[debug]         Load.resolveProject(hey) took 54.5595ms
[debug]       Load.loadTransitive: finalizeProject(Project(id hey, base: C:\Users\vlads\Desktop\MyScalaProgram\Hey, plugins: List(<none>))) took 62.856ms
[debug] [Loading] Done in C:\Users\vlads\Desktop\MyScalaProgram\Hey, returning: (hey)
[debug]     Load.loadUnit: loadedProjectsRaw took 2241.4883ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.0555ms
[debug]   Load.loadUnit(file:/C:/Users/vlads/Desktop/MyScalaProgram/Hey/, ...) took 9729.3549ms
[debug] Load.apply: load took 9734.8562ms
[debug] Load.apply: resolveProjects took 0.2079ms
[debug] Load.apply: finalTransforms took 52.7881ms
[debug] Load.apply: config.delegates took 0.5338ms
[debug] Load.apply: Def.make(settings)... took 176.159ms
[debug] Load.apply: structureIndex took 100.3609ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to Hey (in build file:/C:/Users/vlads/Desktop/MyScalaProgram/Hey/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60938 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60938, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Hey (in build file:/C:/Users/vlads/Desktop/MyScalaProgram/Hey/)
[debug] > Exec(idea-shell, None, None)
